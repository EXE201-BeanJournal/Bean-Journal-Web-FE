/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as LoginImport } from './routes/login'
import { Route as JournalImport } from './routes/journal'
import { Route as IndexImport } from './routes/index'
import { Route as JournalIndexImport } from './routes/journal/index'
import { Route as JournalDashboardImport } from './routes/journal/dashboard'
import { Route as JournalBeanJourneyImport } from './routes/journal/bean-journey'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const JournalRoute = JournalImport.update({
  id: '/journal',
  path: '/journal',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const JournalIndexRoute = JournalIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => JournalRoute,
} as any)

const JournalDashboardRoute = JournalDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => JournalRoute,
} as any)

const JournalBeanJourneyRoute = JournalBeanJourneyImport.update({
  id: '/bean-journey',
  path: '/bean-journey',
  getParentRoute: () => JournalRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/journal': {
      id: '/journal'
      path: '/journal'
      fullPath: '/journal'
      preLoaderRoute: typeof JournalImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/journal/bean-journey': {
      id: '/journal/bean-journey'
      path: '/bean-journey'
      fullPath: '/journal/bean-journey'
      preLoaderRoute: typeof JournalBeanJourneyImport
      parentRoute: typeof JournalImport
    }
    '/journal/dashboard': {
      id: '/journal/dashboard'
      path: '/dashboard'
      fullPath: '/journal/dashboard'
      preLoaderRoute: typeof JournalDashboardImport
      parentRoute: typeof JournalImport
    }
    '/journal/': {
      id: '/journal/'
      path: '/'
      fullPath: '/journal/'
      preLoaderRoute: typeof JournalIndexImport
      parentRoute: typeof JournalImport
    }
  }
}

// Create and export the route tree

interface JournalRouteChildren {
  JournalBeanJourneyRoute: typeof JournalBeanJourneyRoute
  JournalDashboardRoute: typeof JournalDashboardRoute
  JournalIndexRoute: typeof JournalIndexRoute
}

const JournalRouteChildren: JournalRouteChildren = {
  JournalBeanJourneyRoute: JournalBeanJourneyRoute,
  JournalDashboardRoute: JournalDashboardRoute,
  JournalIndexRoute: JournalIndexRoute,
}

const JournalRouteWithChildren =
  JournalRoute._addFileChildren(JournalRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/journal': typeof JournalRouteWithChildren
  '/login': typeof LoginRoute
  '/sign-up': typeof SignUpRoute
  '/journal/bean-journey': typeof JournalBeanJourneyRoute
  '/journal/dashboard': typeof JournalDashboardRoute
  '/journal/': typeof JournalIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/sign-up': typeof SignUpRoute
  '/journal/bean-journey': typeof JournalBeanJourneyRoute
  '/journal/dashboard': typeof JournalDashboardRoute
  '/journal': typeof JournalIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/journal': typeof JournalRouteWithChildren
  '/login': typeof LoginRoute
  '/sign-up': typeof SignUpRoute
  '/journal/bean-journey': typeof JournalBeanJourneyRoute
  '/journal/dashboard': typeof JournalDashboardRoute
  '/journal/': typeof JournalIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/journal'
    | '/login'
    | '/sign-up'
    | '/journal/bean-journey'
    | '/journal/dashboard'
    | '/journal/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/sign-up'
    | '/journal/bean-journey'
    | '/journal/dashboard'
    | '/journal'
  id:
    | '__root__'
    | '/'
    | '/journal'
    | '/login'
    | '/sign-up'
    | '/journal/bean-journey'
    | '/journal/dashboard'
    | '/journal/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  JournalRoute: typeof JournalRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignUpRoute: typeof SignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  JournalRoute: JournalRouteWithChildren,
  LoginRoute: LoginRoute,
  SignUpRoute: SignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/journal",
        "/login",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/journal": {
      "filePath": "journal.tsx",
      "children": [
        "/journal/bean-journey",
        "/journal/dashboard",
        "/journal/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/journal/bean-journey": {
      "filePath": "journal/bean-journey.tsx",
      "parent": "/journal"
    },
    "/journal/dashboard": {
      "filePath": "journal/dashboard.tsx",
      "parent": "/journal"
    },
    "/journal/": {
      "filePath": "journal/index.tsx",
      "parent": "/journal"
    }
  }
}
ROUTE_MANIFEST_END */
